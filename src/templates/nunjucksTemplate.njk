<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">

    <!-- if there's access to internet adding a reference to bootstrap cdn would be nice help with the styling -->
    <!-- I'd be preferable not to use external scripts/css
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO"
        crossorigin="anonymous"> -->

    <!-- <link href="./style.css" rel="stylesheet" type="text/css" /> -->

    <!-- CSS goes in the document HEAD or added to your external stylesheet -->
    <style type="text/css">
        @media print{@page {size: landscape}}

        body {
            font-family: Arial,sans-serif;
        }

        td {
            vertical-align: top;
        }

        /* img {
            width: 10em;
        } */

        table.gridtable {
            /* font-family: verdana, arial, sans-serif; */
            /* font-size: 16px; */
            color: #333333;
            border-width: 2px;
            border-color: #666666;
            border-collapse: collapse;
            margin-bottom: 10px;
            page-break-after: always;
        }

        table.gridtable th {
            border-width: 2px;
            padding: 8px;
            border-style: solid;
            border-color: #666666;
            background-color: #ffffff;
            text-align: center;
        }

        table.gridtable td {
            border-width: 2px;
            padding: 8px;
            border-style: solid;
            border-color: #666666;
            background-color: #ffffff;
            width: {{100 // actors.length}}%;
        }

        ul {
            list-style: none;
            margin: 0px;
            padding: 5px 5px 5px 20px;
        }

        ol {
            margin: 0px;
            margin-left: 10px;
            padding: 5px;
            padding-left: 10px;
        }

        li {
            margin: 1px 0px;
            padding: 0px;
            line-height: 110%;
        }

        li p {
            margin: 2px 0px;
            padding: 0px;
        }

        div.ncw {
            border: solid black 1px;
            padding: 0px;
            margin: 5px 0px;
        }

        div.ncw div {
            border: solid black 1px;
            margin: 0px;
        }

        div.ncw-head {
            font-weight: bold;
            padding: 10px;
            text-align: center;
            text-transform: uppercase;
        }

        div.ncw-warning div.ncw-head {
            background-color: red;
            color: white;
        }

        div.ncw-caution div.ncw-head {
            background-color: yellow;
            color: black;
        }

        div.ncw-body {
            padding: 5px;
        }

    </style>

    <title>{{procedure_name}}</title>
</head>




{# Create a micro that will write a bunch of steps as a list.
 # This is intended to be utilized as the internals of a table cell (<td>)
 #}
{% macro writeStepColumn(actor, steps) %}

    {# start the ordered list, keeping the numbering for the current actor column #}
    <ol start="{{actor.stepNum}}">

        {# Need to check of the step is a simple string for a single step, or is more complex #}
        {% if steps|isString %}

            {# If a simple string, the value is easy #}
            <li>{{steps|markdownFormatter}}</li>

            {# Make sure to increment the step #}
            {{actor|stepIncrement}}
        {% else %}

            {# Loop through each step #}
            {% for step in steps %}
                
                {# Write the title if it exists #}
                {% if step.title %}
                    {{step.title|markdownFormatter}}
                {% endif %}

                {# Check for warning #}
                {% if step.warning %}
                    <div class="ncw ncw-warning">
                        <div class="ncw-head">WARNING</div>
                        <div class="ncw-body">{{step.warning|markdownFormatter}}</div>
                    </div>

                {# Check for caution #}
                {% elif step.caution %}
                    <div class="ncw ncw-caution">
                        <div class="ncw-head">CAUTION</div>
                        <div class="ncw-body">{{step.caution|markdownFormatter}}</div>
                    </div>

                {# Check for note #}
                {% elif step.note %}
                    <div class="ncw ncw-note">
                        <div class="ncw-head">NOTE</div>
                        <div class="ncw-body">{{step.note|markdownFormatter}}</div>
                    </div>

                {# If not warning, caution, or note, it must be a step! #}
                {% else %}
                    
                    {{writeStep(actor, step)}}
                    
                {% endif %}
            {% endfor %}
        {% endif %}
    </ol>
{% endmacro %}

{# Put the actual step in a macro since it can call itself for substeps... #}
{% macro writeStep(actor, step) %}

    {# First, print the step #}
    <li>
        {{step.step|markdownFormatter}}
        {# Make sure to increment the step number #}
        {{actor|stepIncrement}}

        {# Check for checkboxes #}
        {% if step.checkboxes %}
            <ul>
                {% if step.checkboxes|isString %}
                    <li>{{step.checkboxes|checkboxes|markdownFormatter}}</li>
                {% else %}
                    {% for checkbox in step.checkboxes %}
                        <li>{{checkbox|checkboxes|markdownFormatter}}</li>
                    {% endfor %}
                {% endif %}
            </ul>
        {% endif %}

        {# Check for substeps. #}
        {% if step.substeps %}
            <ul>
                {% if step.substeps|isString %}
                    {{writeStep(actor, step.substeps)}}
                {% else %}
                    {% for substep in step.substeps %}
                        {{writeStep(actor, substep)}}
                    {% endfor %}
                {% endif %}
            </ul>
        {% endif %}

        {# Check for images. #}
        {% if step.images %}
            {% if step.images|isString %}
                <img class="img-fluid" src="{{step.images|imagePath}}" alt="image" />
            {% else %}
                {% for image in step.images %}
                    <img class="img-fluid" src="{{image|imagePath}}" alt="image" />
                {% endfor %}
            {% endif %}
        {% endif %}

        {# Check for comment. #}
        {% if step.comment %}
            {% if step.commnet|isString %}
                <p>{{step.comment|markdownFormatter}}</p>
            {% else %}
                {% for comment in step.comment %}
                    <div style="text-align: center;border-style: solid;border: 1">
                        {{comment|markdownFormatter}}
                    </div>
                {% endfor %}
            {% endif %}
        {% endif %}

    </li>

{%- endmacro -%}

<body>
    <div class="container-fluid">
        <h1>
            {{procedure_name}}
        </h1>

        {# For each checklist in the tasks array, create a table #}
        {% for checklist in tasks %}

            {# Write the table name #}
            <h2>{{checklist.title}} ({{checklist.duration}})</h2>
            <table class="gridtable">
                {# Create Headers for each Actor #}
                <tr>
                    {% for actor in actors %}
                        {{ actor|stepIncrement(1) }}
                        <th>{{actor.role}}({{actor.name if actor.name}})</th>
                    {% endfor %}
                </tr>

                {# Cycle through the tasks in the checklist #}
                {% for taskList in checklist.evaTasks %}

                    {# Get the first level inside the taskList.  The variable here called 'name' is either
                       an actor, or could be a simultaneous step, labeled "simo".   If actor is actually 
                       an actor, then values are the steps.  If actor is "simo", then values would be a list 
                       of actors and steps that execute simultaneously (i.e. are in the same table row). 
                       
                       Either way, each entry in taskList represents a table row.  #}
                    {% for name, values in taskList %}
                        <tr>
                        {# Check for a 'simo' step #}
                        {% if name == "simo" %}
                            
                            {# Cycle through the columns, and get the contents if it exists #}
                            {% for colActor in actors %}
                                <td>
                                    {% if values[colActor.role] %}
                                        {{writeStepColumn(colActor, values[colActor.role])}}
                                    {% endif %}
                                </td>
                            {% endfor %} 

                        {% else %} {# Not a simo step #}
                            
                            {# Cycle through the columns, and get the contents if it exists #}
                            {% for colActor in actors %}
                                <td>
                                    {% if name == colActor.role %}
                                        {{writeStepColumn(colActor, values)}}
                                    {% endif %}
                                </td>
                            {% endfor %}
                        {% endif %}
                        </tr>
                    {% endfor %}
                {% endfor %}
            </table>
        {% else %}
            <h2> No Tasks! </h2>
        {% endfor %}
    </div>
</body>

</html>
